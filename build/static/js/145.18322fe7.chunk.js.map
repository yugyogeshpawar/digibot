{"version":3,"sources":["components/_dashboard/user/account/ViewProfile.js"],"names":["ViewProfile","isMountedRef","useIsMountedRef","enqueueSnackbar","useSnackbar","useAuth","user","updateProfile","UpdateUserSchema","Yup","shape","displayName","required","formik","useFormik","enableReinitialize","initialValues","member_name","email","photoURL","phoneNumber","country","address","state","city","zipCode","about","isPublic","validationSchema","onSubmit","values","a","setErrors","setSubmitting","variant","current","afterSubmit","code","handleSubmit","getFieldProps","value","autoComplete","noValidate","container","spacing","item","xs","md","sx","p","direction","fullWidth","label","disabled"],"mappings":"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","file":"static/js/145.18322fe7.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { Grid, Card, Stack, TextField } from '@material-ui/core';\r\n// hooks\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../../hooks/useIsMountedRef';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ViewProfile() {\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { user, updateProfile } = useAuth();\r\n  const UpdateUserSchema = Yup.object().shape({\r\n    displayName: Yup.string().required('Name is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      displayName: user.member_name == null ? '' : user.member_name,\r\n      email: user.email == null ? '' : user.email,\r\n      photoURL: user.photoURL,\r\n      phoneNumber: user.phoneNumber == null ? '' : user.phoneNumber,\r\n      country: user.country == null ? '' : user.country,\r\n      address: user.address == null ? '' : user.address,\r\n      state: user.state == null ? '' : user.state,\r\n      city: user.city == null ? '' : user.city,\r\n      zipCode: user.zipCode == null ? '' : user.zipCode,\r\n      about: user.displayName == null ? '' : user.displayName,\r\n      isPublic: user.isPublic\r\n    },\r\n\r\n    validationSchema: UpdateUserSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        await updateProfile({ ...values });\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n        }\r\n      } catch (error) {\r\n        if (isMountedRef.current) {\r\n          setErrors({ afterSubmit: error.code });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const { handleSubmit, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={{ xs: 2, md: 3 }}>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField fullWidth label=\"User Name\" disabled {...getFieldProps('displayName')} />\r\n                  <TextField fullWidth disabled label=\"Email Address\" {...getFieldProps('email')} />\r\n                </Stack>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField fullWidth label=\"Full Name\" disabled />\r\n                  <TextField fullWidth label=\"Country code\" disabled />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField fullWidth label=\"Mobile Number\" disabled {...getFieldProps('phoneNumber')} />\r\n                  <TextField fullWidth label=\"Address\" disabled {...getFieldProps('address')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField fullWidth label=\"State/Region\" disabled {...getFieldProps('state')} />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField fullWidth label=\"City\" disabled {...getFieldProps('city')} />\r\n                  <TextField fullWidth label=\"Zip/Code\" disabled {...getFieldProps('zipCode')} />\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}