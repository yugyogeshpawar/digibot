{"version":3,"sources":["pages/dashboard/AnnumBonusList.js"],"names":["Array","map","_","index","id","mockData","email","name","fullName","reflink","status","avatar","image","checkIn","time","checkOut","phoneNumber","ReferralList","dispatch","useDispatch","annumBonus","useSelector","state","user","useEffect","getAnnumBonus","Arrdata","output","title","sx","mb","eContainer","minWidth","undefined","m","display","justifyContent","alignItems","width","variant","row","direction","spacing","cnt","format","Date","calculateDate","incomeAmt"],"mappings":"gXAqCsB,YAAIA,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAJ,MAAe,CACrDC,GAAIC,IAASD,GAAGD,GAChBG,MAAOD,IAASC,MAAMH,GACtBI,KAAMF,IAASE,KAAKC,SAASL,GAC7BM,QAASJ,IAASE,KAAKE,QAAQN,GAC/BO,OAAQL,IAASE,KAAKG,OAAOP,GAC7BQ,OAAQN,IAASO,MAAMD,OAAOR,GAC9BU,QAASR,IAASS,KAAKX,GACvBY,SAAUV,IAASS,KAAKX,GACxBa,YAAaX,IAASW,YAAYb,OAErB,SAASc,IACtB,IAAMC,EAAWC,cACTC,EAAeC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA5CH,WACRI,qBAAU,WACRN,EAASO,iBACR,CAACP,IACJ,IAAMQ,EAAO,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAYO,OAC5B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAYC,MAAM,oBAAoBC,GAAI,CAAEC,GAAI,KAChD,cAAC,IAAD,UACE,cAAC,IAAD,CAAgBC,YAAU,EAACF,GAAI,CAAEG,SAAU,KAA3C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWH,GAAI,CAAEG,SAAU,KAA3B,iBACA,cAAC,IAAD,CAAWH,GAAI,CAAEG,SAAU,KAA3B,kBACA,cAAC,IAAD,CAAWH,GAAI,CAAEG,SAAU,KAA3B,oBAEA,cAAC,IAAD,SAGJ,cAAC,IAAD,eACeC,IAAZP,EACC,mCACE,cAAC,IAAD,CAAKQ,EAAG,EAAGC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAASR,GAAI,CAAES,MAAO,eAAnF,SACE,cAAC,IAAD,CAAYC,QAAQ,KAApB,+BAIJ,0CACGb,QADH,IACGA,OADH,EACGA,EAASzB,KAAI,SAACuC,GAAD,OACZ,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,UAAU,MAAMJ,WAAW,SAASK,QAAS,EAApD,SACE,cAAC,IAAD,CAAYH,QAAQ,YAApB,SAAiCC,EAAIG,IAAM,QAI/C,cAAC,IAAD,UAAYC,YAAO,IAAIC,KAAKL,EAAIM,eAAgB,iBAEhD,cAAC,IAAD,UAAYN,EAAIO,cATHP,EAAIG,mBAmBjC,cAAC,IAAD","file":"static/js/153.3bf0ba96.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  Table,\r\n  CardHeader,\r\n  Stack,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Typography,\r\n  Avatar,\r\n  TableContainer,\r\n  Divider,\r\n  Box\r\n} from '@material-ui/core';\r\n\r\n// redux\r\n// eslint-disable-next-line import/no-unresolved\r\nimport Label from 'src/components/Label';\r\nimport { sentenceCase } from 'change-case';\r\nimport format from 'date-fns/format';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport mockData from 'src/utils/mock-data';\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getAnnumBonus } from '../../redux/slices/user';\r\n// routes\r\n// hooks\r\n\r\n// components\r\n\r\nimport Scrollbar from '../../components/Scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------\r\nconst MOCK_BOOKINGS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  email: mockData.email(index),\r\n  name: mockData.name.fullName(index),\r\n  reflink: mockData.name.reflink(index),\r\n  status: mockData.name.status(index),\r\n  avatar: mockData.image.avatar(index),\r\n  checkIn: mockData.time(index),\r\n  checkOut: mockData.time(index),\r\n  phoneNumber: mockData.phoneNumber(index)\r\n}));\r\nexport default function ReferralList() {\r\n  const dispatch = useDispatch();\r\n  const { annumBonus } = useSelector((state) => state.user);\r\n  useEffect(() => {\r\n    dispatch(getAnnumBonus());\r\n  }, [dispatch]);\r\n  const Arrdata = annumBonus?.output;\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Annum Bonus List \" sx={{ mb: 3 }} />\r\n      <Scrollbar>\r\n        <TableContainer eContainer sx={{ minWidth: 720 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ minWidth: 240 }}>No.</TableCell>\r\n                <TableCell sx={{ minWidth: 120 }}>Date</TableCell>\r\n                <TableCell sx={{ minWidth: 160 }}>income</TableCell>\r\n\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Arrdata === undefined ? (\r\n                <>\r\n                  <Box m={4} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{ width: 'fit-content' }}>\r\n                    <Typography variant=\"h6\">No Data Found</Typography>\r\n                  </Box>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {Arrdata?.map((row) => (\r\n                    <TableRow key={row.cnt}>\r\n                      <TableCell>\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                          <Typography variant=\"subtitle2\">{row.cnt + 1}</Typography>\r\n                        </Stack>\r\n                      </TableCell>\r\n\r\n                      <TableCell>{format(new Date(row.calculateDate), 'dd MMM yyyy')}</TableCell>\r\n\r\n                      <TableCell>{row.incomeAmt}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}\r\n"],"sourceRoot":""}