{"version":3,"sources":["pages/dashboard/MyDirect.js"],"names":["MyDirect","dispatch","useDispatch","directM","useSelector","state","user","useEffect","directMember","useState","currentPage","setCurrentPage","itemsPerPage","searchMemberId","setSearchMemberId","filteredData","filter","row","member_user_id","includes","indexOfLastItem","indexOfFirstItem","currentItems","slice","formatDate","inputDate","parsedDate","Date","day","getDate","month","getMonth","year","getFullYear","title","sx","mb","m","label","variant","margin","value","onChange","e","target","eContainer","minWidth","length","colSpan","display","justifyContent","alignItems","width","map","ind","textTransform","registration_date","position","investment_busd","status","color","mt","count","Math","ceil","page","event","newPage"],"mappings":"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","file":"static/js/161.31eb3aa5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  Table,\r\n  CardHeader,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Typography,\r\n  TableContainer,\r\n  Divider,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Pagination\r\n  // eslint-disable-next-line import/no-unresolved\r\n} from '@material-ui/core';\r\nimport format from 'date-fns/format';\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { directMember } from '../../redux/slices/user';\r\nimport Scrollbar from '../../components/Scrollbar';\r\n\r\nexport default function MyDirect() {\r\n  const dispatch = useDispatch();\r\n  const { directM } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(directMember());\r\n  }, [dispatch]);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n  const [searchMemberId, setSearchMemberId] = useState('');\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  const filteredData = directM?.filter((row) => row?.member_user_id.includes(searchMemberId));\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredData?.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  function formatDate(inputDate) {\r\n    const monthNames = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December'\r\n    ];\r\n\r\n    const parsedDate = new Date(inputDate);\r\n    const day = parsedDate.getDate();\r\n    const month = monthNames[parsedDate.getMonth()];\r\n    const year = parsedDate.getFullYear();\r\n\r\n    const formattedDate = `${day} ${month} ${year}`;\r\n    return formattedDate;\r\n  }\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"My Direct\" sx={{ mb: 3 }} />\r\n      <Scrollbar>\r\n        <Box m={1}>\r\n          <TextField\r\n            label=\"Search by Member ID\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={searchMemberId}\r\n            onChange={(e) => setSearchMemberId(e.target.value)}\r\n          />\r\n        </Box>\r\n        <TableContainer eContainer sx={{ minWidth: 720 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ minWidth: 120 }}>No.</TableCell>\r\n                <TableCell sx={{ minWidth: 160 }}>Member Id</TableCell>\r\n                <TableCell sx={{ minWidth: 160 }}>Reg. Date</TableCell>\r\n                <TableCell sx={{ minWidth: 200 }}>Position</TableCell>\r\n                <TableCell sx={{ minWidth: 120 }}>Package</TableCell>\r\n                <TableCell sx={{ minWidth: 120 }}>Status</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {currentItems?.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={7}>\r\n                    <Box m={4} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{ width: 'fit-content' }}>\r\n                      <Typography variant=\"h6\">No Data Found</Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                <>\r\n                  {currentItems?.map((row, ind) => (\r\n                    <TableRow key={ind}>\r\n                      <TableCell>\r\n                        <Typography variant=\"subtitle2\">{ind + 1}</Typography>\r\n                      </TableCell>\r\n                      <TableCell>{row?.member_user_id}</TableCell>\r\n                      <TableCell sx={{ textTransform: 'capitalize' }}>{formatDate(row?.registration_date)}</TableCell>\r\n                      <TableCell sx={{ textTransform: 'capitalize' }}>{row?.position}</TableCell>\r\n                      <TableCell sx={{ textTransform: 'capitalize' }}>{row?.investment_busd} $</TableCell>\r\n                      <TableCell sx={{ textTransform: 'capitalize' }}>\r\n                        {row?.status === 1 ? <Box color=\"green\"> Active </Box> : <Box color=\"red\"> Inactive </Box>}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n          <Pagination\r\n            count={Math.ceil(filteredData?.length / itemsPerPage)}\r\n            page={currentPage}\r\n            onChange={handleChangePage}\r\n          />\r\n        </Box>\r\n      </Scrollbar>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}\r\n"],"sourceRoot":""}