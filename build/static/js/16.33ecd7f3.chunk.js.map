{"version":3,"sources":["components/carousel/controls/CarouselControlsPaging1.js","components/carousel/controls/CarouselControlsPaging2.js","components/carousel/controls/CarouselControlsArrowsBasic1.js","components/carousel/controls/CarouselControlsArrowsBasic2.js","components/carousel/controls/CarouselControlsArrowsIndex.js","components/carousel/CarouselAnimation.js","components/carousel/CarouselBasic1.js","components/carousel/CarouselBasic2.js","components/carousel/CarouselBasic3.js","components/carousel/CarouselBasic4.js","components/carousel/CarouselCenterMode.js","components/carousel/CarouselThumbnail.js"],"names":["RootStyle","styled","theme","display","listStyle","alignItems","position","right","spacing","bottom","width","height","opacity","cursor","CarouselControlsPaging1","color","other","appendDots","dots","customPaging","Box","sx","justifyContent","component","borderRadius","bgcolor","DotStyle","transition","transitions","create","easing","easeInOut","duration","ICON_SIZE","zIndex","top","ArrowStyle","MIconButton","padding","palette","common","white","CarouselControlsArrowsBasic1","arrowLine","onNext","onPrevious","isRTL","useTheme","direction","size","onClick","icon","roundKeyboardArrowRight","roundKeyboardArrowLeft","arrowRightFill","arrowLeftFill","margin","background","grey","shape","borderRadiusSm","CarouselControlsArrowsBasic2","backgroundColor","alpha","CarouselControlsArrowsIndex","index","total","Typography","variant","MOCK_CAROUSELS","Array","map","_","id","mockData","title","text","image","feed","description","CarouselImgStyle","objectFit","CarouselItem","item","isActive","Paper","paddingTop","xs","md","alt","src","backgroundImage","CardContent","maxWidth","textAlign","open","motion","div","variants","varFadeInRight","gutterBottom","noWrap","Button","mt","CarouselAnimation","carouselRef","useRef","useState","length","currentIndex","setCurrentIndex","settings","speed","arrows","autoplay","slidesToShow","slidesToScroll","rtl","Boolean","beforeChange","current","next","Card","ref","slickNext","slickPrev","CarouselBasic1","CarouselBasic2","initialSlide","fade","boxShadow","customShadows","z16","borderRadiusMd","CarouselBasic3","className","CarouselControlsPaging2","ContentItemStyle","borderBottomLeftRadius","backdropFilter","WebkitBackdropFilter","borderBottomRightRadius","flexDirection","action","hoverOpacity","moreHorizontalFill","CarouselBasic4","overflow","left","content","breakpoints","up","transform","mx","paragraph","Link","to","RouterLink","Icon","arrowForwardFill","ml","CarouselCenterMode","centerMode","centerPadding","responsive","breakpoint","THUMB_SIZE","root","float","LargeImgStyle","ThumbImgStyle","LargeItem","ThumbnailItem","CarouselThumbnail","nav1","setNav1","nav2","setNav2","slider1","slider2","settings1","draggable","adaptiveHeight","settings2","swipeToSlide","focusOnSelect","variableWidth","useEffect","asNavFor","border","primary","main"],"mappings":"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","file":"static/js/16.33ecd7f3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('ul')(({ theme }) => ({\r\n  display: 'flex',\r\n  listStyle: 'none',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  right: theme.spacing(3),\r\n  bottom: theme.spacing(3),\r\n  '& li': {\r\n    width: 18,\r\n    height: 18,\r\n    opacity: 0.32,\r\n    cursor: 'pointer',\r\n    '&.slick-active': { opacity: 1 }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsPaging1.propTypes = {\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default function CarouselControlsPaging1({ color, ...other }) {\r\n  return {\r\n    appendDots: (dots) => (\r\n      <>\r\n        <RootStyle {...other}>{dots}</RootStyle>\r\n      </>\r\n    ),\r\n    customPaging: () => (\r\n      <Box\r\n        sx={{\r\n          width: 1,\r\n          height: 1,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            width: 8,\r\n            height: 8,\r\n            borderRadius: '50%',\r\n            bgcolor: color || 'common.white'\r\n          }}\r\n        />\r\n      </Box>\r\n    )\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('ul')({\r\n  display: 'flex',\r\n  listStyle: 'none',\r\n  justifyContent: 'center',\r\n  '& li': {\r\n    width: 24,\r\n    height: 24,\r\n    opacity: 0.32,\r\n    cursor: 'pointer',\r\n    '&.slick-active': {\r\n      opacity: 1,\r\n      '& .dotActive': {\r\n        width: 18,\r\n        borderRadius: 8\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst DotStyle = styled('span')(({ theme }) => ({\r\n  width: 8,\r\n  height: 8,\r\n  borderRadius: '50%',\r\n  transition: theme.transitions.create('all', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: 360\r\n  })\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsPaging2.propTypes = {\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default function CarouselControlsPaging2({ color, ...other }) {\r\n  return {\r\n    appendDots: (dots) => (\r\n      <>\r\n        <RootStyle {...other}>{dots}</RootStyle>\r\n      </>\r\n    ),\r\n    customPaging: () => (\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <DotStyle\r\n          className=\"dotActive\"\r\n          sx={{\r\n            bgcolor: color || 'primary.main'\r\n          }}\r\n        />\r\n      </Box>\r\n    )\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\r\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\r\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\r\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = {\r\n  width: 20,\r\n  height: 20\r\n};\r\n\r\nconst RootStyle = styled(Box)(({ theme }) => ({\r\n  zIndex: 9,\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  top: theme.spacing(2),\r\n  right: theme.spacing(2)\r\n}));\r\n\r\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\r\n  padding: 6,\r\n  opacity: 0.48,\r\n  color: theme.palette.common.white,\r\n  '&:hover': { opacity: 1 }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsArrowsBasic1.propTypes = {\r\n  arrowLine: PropTypes.bool,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func\r\n};\r\n\r\nexport default function CarouselControlsArrowsBasic1({ arrowLine, onNext, onPrevious, ...other }) {\r\n  const theme = useTheme();\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n\r\n      <ArrowStyle size=\"small\" onClick={onNext}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\r\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\r\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\r\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SIZE = 40;\r\n\r\nconst ICON_SIZE = {\r\n  width: 20,\r\n  height: 20\r\n};\r\n\r\nconst RootStyle = styled(Box)(({ theme }) => ({\r\n  top: 0,\r\n  bottom: 0,\r\n  zIndex: 9,\r\n  height: SIZE,\r\n  width: '100%',\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  padding: theme.spacing(0, 2),\r\n  justifyContent: 'space-between'\r\n}));\r\n\r\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\r\n  width: SIZE,\r\n  height: SIZE,\r\n  opacity: 0.48,\r\n  display: 'flex',\r\n  cursor: 'pointer',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.common.white,\r\n  background: theme.palette.grey[900],\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  transition: theme.transitions.create('opacity'),\r\n  '&:hover': {\r\n    opacity: 1,\r\n    background: theme.palette.grey[900]\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsArrowsBasic2.propTypes = {\r\n  arrowLine: PropTypes.bool,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func\r\n};\r\n\r\nexport default function CarouselControlsArrowsBasic2({ arrowLine, onNext, onPrevious, ...other }) {\r\n  const theme = useTheme();\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n\r\n      <ArrowStyle size=\"small\" onClick={onNext}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\r\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\r\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\r\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Typography, Box } from '@material-ui/core';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = {\r\n  width: 20,\r\n  height: 20\r\n};\r\n\r\nconst RootStyle = styled(Box)(({ theme }) => ({\r\n  zIndex: 9,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  bottom: theme.spacing(2),\r\n  right: theme.spacing(2),\r\n  color: theme.palette.common.white,\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.grey[900], 0.48)\r\n}));\r\n\r\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\r\n  padding: 6,\r\n  opacity: 0.48,\r\n  color: theme.palette.common.white,\r\n  '&:hover': { opacity: 1 }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsArrowsIndex.propTypes = {\r\n  index: PropTypes.number,\r\n  total: PropTypes.number,\r\n  arrowLine: PropTypes.bool,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func\r\n};\r\n\r\nexport default function CarouselControlsArrowsIndex({ arrowLine, index, total, onNext, onPrevious, ...other }) {\r\n  const theme = useTheme();\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n\r\n      <Typography variant=\"subtitle2\">\r\n        {index + 1}/{total}\r\n      </Typography>\r\n\r\n      <ArrowStyle size=\"small\" onClick={onNext}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Paper, Button, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { varFadeInRight, MotionContainer } from '../animate';\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst CarouselImgStyle = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object,\r\n  isActive: PropTypes.bool\r\n};\r\n\r\nfunction CarouselItem({ item, isActive }) {\r\n  const theme = useTheme();\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        position: 'relative',\r\n        paddingTop: { xs: '100%', md: '50%' }\r\n      }}\r\n    >\r\n      <CarouselImgStyle alt={title} src={image} />\r\n      <Box\r\n        sx={{\r\n          top: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          position: 'absolute',\r\n          backgroundImage: `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(\r\n            theme.palette.grey[900],\r\n            0\r\n          )} 100%)`\r\n        }}\r\n      />\r\n      <CardContent\r\n        sx={{\r\n          bottom: 0,\r\n          width: '100%',\r\n          maxWidth: 480,\r\n          textAlign: 'left',\r\n          position: 'absolute',\r\n          color: 'common.white'\r\n        }}\r\n      >\r\n        <MotionContainer open={isActive}>\r\n          <motion.div variants={varFadeInRight}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              {item.title}\r\n            </Typography>\r\n          </motion.div>\r\n          <motion.div variants={varFadeInRight}>\r\n            <Typography variant=\"body2\" noWrap gutterBottom>\r\n              {item.description}\r\n            </Typography>\r\n          </motion.div>\r\n          <motion.div variants={varFadeInRight}>\r\n            <Button variant=\"contained\" sx={{ mt: 3 }}>\r\n              View More\r\n            </Button>\r\n          </motion.div>\r\n        </MotionContainer>\r\n      </CardContent>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function CarouselAnimation() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0);\r\n\r\n  const settings = {\r\n    speed: 800,\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item, index) => (\r\n          <CarouselItem key={item.title} item={item} isActive={index === currentIndex} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Card } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />;\r\n}\r\n\r\nexport default function CarouselBasic1() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title, description } = item;\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 370, objectFit: 'cover' }} />\r\n\r\n      <CardContent sx={{ textAlign: 'left' }}>\r\n        <Typography variant=\"h6\" noWrap gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function CarouselBasic2() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(2);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    initialSlide: currentIndex,\r\n    fade: Boolean(theme.direction !== 'rtl'),\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n        sx={{ bottom: 120 }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsPaging2, CarouselControlsArrowsBasic2 } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  '& .slick-list': {\r\n    boxShadow: theme.customShadows.z16,\r\n    borderRadius: theme.shape.borderRadiusMd\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />;\r\n}\r\n\r\nexport default function CarouselBasic3() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n\r\n  const settings = {\r\n    dots: true,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    ...CarouselControlsPaging2({\r\n      sx: { mt: 3 }\r\n    })\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport moreHorizontalFill from '@iconify/icons-eva/more-horizontal-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsBasic2 } from './controls';\r\n//\r\nimport { MIconButton } from '../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst ContentItemStyle = styled('div')(({ theme }) => ({\r\n  bottom: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(3),\r\n  borderBottomLeftRadius: 16,\r\n  backdropFilter: 'blur(8px)',\r\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n  borderBottomRightRadius: 16,\r\n  justifyContent: 'space-between',\r\n  backgroundColor: alpha(theme.palette.grey[900], 0.72),\r\n  flexDirection: theme.direction === 'rtl' ? 'row-reverse' : 'row'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', zIndex: 0 }}>\r\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />\r\n\r\n      <ContentItemStyle>\r\n        <Typography variant=\"h6\" sx={{ color: 'common.white' }}>\r\n          {item.title}\r\n        </Typography>\r\n        <MIconButton\r\n          onClick={() => {}}\r\n          sx={{\r\n            color: 'common.white',\r\n            '&:hover': {\r\n              bgcolor: (theme) => alpha(theme.palette.common.white, theme.palette.action.hoverOpacity)\r\n            }\r\n          }}\r\n        >\r\n          <Icon icon={moreHorizontalFill} />\r\n        </MIconButton>\r\n      </ContentItemStyle>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function CarouselBasic4() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    fade: Boolean(theme.direction !== 'rtl'),\r\n    rtl: Boolean(theme.direction === 'rtl')\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\r\n    </Card>\r\n  );\r\n}\r\n","import { useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport arrowForwardFill from '@iconify/icons-eva/arrow-forward-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Paper, Link, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsBasic2 } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&:before, &:after': {\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 8,\r\n    width: 48,\r\n    content: \"''\",\r\n    height: '100%',\r\n    display: 'none',\r\n    position: 'absolute',\r\n    backgroundImage: 'linear-gradient(to right, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%)',\r\n    [theme.breakpoints.up(480)]: {\r\n      display: 'block'\r\n    }\r\n  },\r\n  '&:after': {\r\n    right: 0,\r\n    left: 'auto',\r\n    transform: 'scaleX(-1)'\r\n  }\r\n}));\r\n\r\nconst CarouselImgStyle = styled('img')(({ theme }) => ({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n  transition: theme.transitions.create('all')\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        mx: 1,\r\n        borderRadius: 2,\r\n        overflow: 'hidden',\r\n        paddingTop: 'calc(16 /9 * 100%)',\r\n        position: 'relative',\r\n        '&:hover img': {\r\n          width: '120%',\r\n          height: '120%'\r\n        }\r\n      }}\r\n    >\r\n      <CarouselImgStyle alt={title} src={image} />\r\n      <CardContent\r\n        sx={{\r\n          bottom: 0,\r\n          zIndex: 9,\r\n          width: '100%',\r\n          textAlign: 'left',\r\n          position: 'absolute',\r\n          color: 'common.white',\r\n          backgroundImage: (theme) =>\r\n            `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(theme.palette.grey[900], 0)} 100%)`\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" paragraph>\r\n          {title}\r\n        </Typography>\r\n        <Link\r\n          to=\"#\"\r\n          color=\"inherit\"\r\n          variant=\"overline\"\r\n          component={RouterLink}\r\n          sx={{\r\n            opacity: 0.72,\r\n            alignItems: 'center',\r\n            display: 'inline-flex',\r\n            transition: (theme) => theme.transitions.create('opacity'),\r\n            '&:hover': { opacity: 1 }\r\n          }}\r\n        >\r\n          learn More\r\n          <Box component={Icon} icon={arrowForwardFill} sx={{ width: 16, height: 16, ml: 1 }} />\r\n        </Link>\r\n      </CardContent>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function CarouselCenterMode() {\r\n  const carouselRef = useRef();\r\n  const theme = useTheme();\r\n\r\n  const settings = {\r\n    slidesToShow: 3,\r\n    centerMode: true,\r\n    centerPadding: '60px',\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: { slidesToShow: 2 }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: { slidesToShow: 2 }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: { slidesToShow: 1, centerPadding: '0' }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef, useEffect } from 'react';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst THUMB_SIZE = 64;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return {\r\n    root: {\r\n      '& .slick-slide': {\r\n        float: isRTL ? 'right' : 'left'\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\nconst LargeImgStyle = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n});\r\n\r\nconst ThumbImgStyle = styled('img')(({ theme }) => ({\r\n  opacity: 0.48,\r\n  width: THUMB_SIZE,\r\n  cursor: 'pointer',\r\n  height: THUMB_SIZE,\r\n  margin: theme.spacing(0, 1),\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  '&:hover': {\r\n    opacity: 0.72,\r\n    transition: theme.transitions.create('opacity')\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLargeItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction LargeItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        paddingTop: {\r\n          xs: '100%',\r\n          md: '50%'\r\n        }\r\n      }}\r\n    >\r\n      <LargeImgStyle alt={title} src={image} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nThumbnailItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction ThumbnailItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return <ThumbImgStyle alt={title} src={image} />;\r\n}\r\n\r\nexport default function CarouselThumbnail() {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [nav1, setNav1] = useState(null);\r\n  const [nav2, setNav2] = useState(null);\r\n  const slider1 = useRef(null);\r\n  const slider2 = useRef(null);\r\n\r\n  const settings1 = {\r\n    dots: false,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    draggable: false,\r\n    slidesToScroll: 1,\r\n    adaptiveHeight: true,\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const settings2 = {\r\n    dots: false,\r\n    arrows: false,\r\n    centerMode: true,\r\n    swipeToSlide: true,\r\n    focusOnSelect: true,\r\n    variableWidth: true,\r\n    centerPadding: '0px',\r\n    slidesToShow: MOCK_CAROUSELS.length > 3 ? 3 : MOCK_CAROUSELS.length\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNav1(slider1.current);\r\n    setNav2(slider2.current);\r\n  }, []);\r\n\r\n  const handlePrevious = () => {\r\n    slider2.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    slider2.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box\r\n        sx={{\r\n          zIndex: 0,\r\n          borderRadius: 2,\r\n          overflow: 'hidden',\r\n          position: 'relative'\r\n        }}\r\n      >\r\n        <Slider {...settings1} asNavFor={nav2} ref={slider1}>\r\n          {MOCK_CAROUSELS.map((item) => (\r\n            <LargeItem key={item} item={item} />\r\n          ))}\r\n        </Slider>\r\n        <CarouselControlsArrowsIndex\r\n          index={currentIndex}\r\n          total={MOCK_CAROUSELS.length}\r\n          onNext={handleNext}\r\n          onPrevious={handlePrevious}\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          mt: 3,\r\n          mx: 'auto',\r\n          ...(MOCK_CAROUSELS.length === 1 && { maxWidth: THUMB_SIZE * 1 + 16 }),\r\n          ...(MOCK_CAROUSELS.length === 2 && { maxWidth: THUMB_SIZE * 2 + 32 }),\r\n          ...(MOCK_CAROUSELS.length === 3 && { maxWidth: THUMB_SIZE * 3 + 48 }),\r\n          ...(MOCK_CAROUSELS.length === 4 && { maxWidth: THUMB_SIZE * 3 + 48 }),\r\n          ...(MOCK_CAROUSELS.length === 5 && { maxWidth: THUMB_SIZE * 6 }),\r\n          '& .slick-current img': {\r\n            opacity: 1,\r\n            border: (theme) => `solid 3px ${theme.palette.primary.main}`\r\n          }\r\n        }}\r\n      >\r\n        <Slider {...settings2} asNavFor={nav1} ref={slider2}>\r\n          {MOCK_CAROUSELS.map((item) => (\r\n            <ThumbnailItem key={item} item={item} />\r\n          ))}\r\n        </Slider>\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}