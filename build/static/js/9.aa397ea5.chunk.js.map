{"version":3,"sources":["../node_modules/@material-ui/core/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/Chip/chipClasses.js","../node_modules/@material-ui/core/Chip/Chip.js","../node_modules/@material-ui/unstyled/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@material-ui/core/Autocomplete/autocompleteClasses.js","../node_modules/@material-ui/core/Autocomplete/Autocomplete.js"],"names":["createSvgIcon","_jsx","d","getChipUtilityClass","slot","generateUtilityClass","chipClasses","generateUtilityClasses","_excluded","ChipRoot","styled","name","overridesResolver","props","styles","styleProps","color","clickable","onDelete","size","variant","avatar","capitalize","icon","deleteIcon","root","deletable","theme","deleteIconColor","alpha","palette","text","primary","_extends","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","backgroundColor","action","selected","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","disabled","opacity","disabledOpacity","pointerEvents","marginLeft","marginRight","width","mode","grey","avatarColorPrimary","contrastText","dark","avatarColorSecondary","secondary","avatarSmall","WebkitTapHighlightColor","margin","main","focusVisible","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","hover","focus","iconSmall","deleteIconSmall","ChipLabel","label","overflow","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","key","Chip","React","inProps","ref","useThemeProps","avatarProp","className","clickableProp","ComponentProp","component","deleteIconProp","iconProp","onClick","onKeyDown","onKeyUp","other","_objectWithoutPropertiesLoose","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","ButtonBase","classes","slots","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","disableRipple","Boolean","customClasses","clsx","CancelIcon","_jsxs","as","undefined","currentTarget","target","preventDefault","current","blur","children","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabledProp","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","newValue","newInputValue","prevValue","valueChange","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","useEventCallback","tagToFocus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","defaultMuiPrevented","which","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","handleOptionMouseOver","Number","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","role","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","getListboxProps","getOptionProps","onMouseOver","onTouchStart","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","clearIndicator","visibility","maxWidth","flexWrap","minWidth","paddingBottom","endAdornment","right","paddingTop","flexGrow","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","IconButton","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","zIndex","modal","AutocompletePaper","Paper","paper","body1","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","listStyle","maxHeight","minHeight","breakpoints","up","AutocompleteGroupLabel","ListSubheader","groupLabel","background","AutocompleteGroupUl","groupUl","Autocomplete","_componentsProps$clea","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","params","map","props2","renderListOption","optionProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2"],"mappings":"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","file":"static/js/9.aa397ea5.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = styleProps;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  styleProps\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, styleProps.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, styleProps.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, styleProps.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, styleProps.color !== 'default' && {\n      color: alpha(theme.palette[styleProps.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[styleProps.color].contrastText\n      }\n    })\n  }, styleProps.size === 'small' && {\n    height: 24\n  }, styleProps.color !== 'default' && {\n    backgroundColor: theme.palette[styleProps.color].main,\n    color: theme.palette[styleProps.color].contrastText\n  }, styleProps.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, styleProps.onDelete && styleProps.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.palette[styleProps.color].dark\n    }\n  });\n}, ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, styleProps.clickable && styleProps.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette[styleProps.color].dark\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, styleProps.variant === 'outlined' && styleProps.color !== 'default' && {\n  color: theme.palette[styleProps.color].main,\n  border: `1px solid ${alpha(theme.palette[styleProps.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[styleProps.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[styleProps.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      size\n    } = styleProps;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  styleProps\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, styleProps.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const styleProps = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const moreProps = component === ButtonBase ? {\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: Boolean(onDelete)\n  } : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    styleProps: styleProps\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      styleProps: styleProps,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@material-ui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`Material-UI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = styleProps;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = styleProps;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  styleProps\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, styleProps.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, styleProps.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  '& .MuiInput-root': {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  '& .MuiInput-root.MuiInputBase-sizeSmall': {\n    '& .MuiInput-input': {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  '& .MuiOutlinedInput-root': {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  '& .MuiFilledInput-root': {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    '& .MuiFilledInput-input': {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiFilledInput-root.MuiInputBase-sizeSmall': {\n    paddingBottom: 1,\n    '& .MuiFilledInput-input': {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, styleProps.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    styleProps\n  }, styles) => _extends({}, styles.popupIndicator, styleProps.popupOpen && styles.popupIndicatorOpen)\n})(({\n  styleProps\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, styleProps.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, styleProps.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  zIndex: theme.zIndex.modal\n}, styleProps.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const styleProps = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      styleProps: styleProps,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      styleProps: styleProps,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      styleProps: styleProps\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            styleProps: styleProps,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              styleProps: styleProps\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              styleProps: styleProps,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      styleProps: styleProps,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        styleProps: styleProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          styleProps: styleProps,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          styleProps: styleProps,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          styleProps: styleProps\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"sourceRoot":""}