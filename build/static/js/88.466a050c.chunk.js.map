{"version":3,"sources":["../node_modules/@material-ui/core/DialogContent/dialogContentClasses.js","../node_modules/@material-ui/core/DialogContent/DialogContent.js","../node_modules/@material-ui/core/DialogActions/dialogActionsClasses.js","../node_modules/@material-ui/core/DialogActions/DialogActions.js","../node_modules/@material-ui/core/DialogTitle/dialogTitleClasses.js","../node_modules/@material-ui/core/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/DialogContentText/dialogContentTextClasses.js","../node_modules/@material-ui/core/DialogContentText/DialogContentText.js","components/_dashboard/user/account/UserKYC.js"],"names":["getDialogContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentRoot","styled","name","overridesResolver","props","styles","styleProps","root","dividers","theme","_extends","flex","WebkitOverflowScrolling","overflowY","padding","borderTop","palette","divider","borderBottom","paddingTop","DialogContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","display","alignItems","justifyContent","marginLeft","DialogActions","getDialogTitleUtilityClass","DialogTitleRoot","Typography","DialogTitle","idProp","id","DialogContext","titleId","component","variant","getDialogContentTextUtilityClass","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","DialogContentText","composedClasses","color","AccountGeneral","useIsMountedRef","enqueueSnackbar","useSnackbar","useState","resMsg","setResMsg","navigate","useNavigate","open","setOpen","handleClose","dispatch","useDispatch","UpdateUserSchema","useSelector","state","user","updateWalletAddressRes","Yup","shape","walletAddress","min","required","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","patchUpdateWalletAddress","response","console","log","error","statusRes","status","data","message","isSubmitting","handleSubmit","getFieldProps","Transition","setFieldValue","forwardRef","direction","value","autoComplete","noValidate","container","item","xs","md","sx","p","fullWidth","label","touched","errors","helperText","mt","type","loading","style","TransitionComponent","keepMounted","onClose","onClick"],"mappings":"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","file":"static/js/88.466a050c.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    dividers\n  } = styleProps;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, styleProps.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, styleProps.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n} : {\n  '.MuiDialogTitle-root + &': {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContent;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, !styleProps.disableSpacing && styles.spacing];\n  }\n})(({\n  styleProps\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = props;\n  const classes = useUtilityClasses(styleProps);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogTitle;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n\n  const styleProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    styleProps: styleProps\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContentText;","/* eslint-disable no-unneeded-ternary */\r\n// Frontend Component: AccountGeneral.js\r\nimport React, { forwardRef, useEffect, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  Stack,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Slide,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// eslint-disable-next-line import/no-unresolved\r\n// Import your API function\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { patchUpdateWalletAddress } from 'src/redux/slices/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../../hooks/useIsMountedRef';\r\n\r\nexport default function AccountGeneral() {\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [resMsg, setResMsg] = useState(null);\r\n  // const { user, updateProfile } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    navigate('/dashboard/app');\r\n  };\r\n  const dispatch = useDispatch(); // Add dispatch here\r\n  const { updateWalletAddressRes } = useSelector((state) => state.user);\r\n  const UpdateUserSchema = Yup.object().shape({\r\n    walletAddress: Yup.string()\r\n      .min(30, 'Wallet address should be at least 30 characters long')\r\n      .required('Wallet address is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      walletAddress: ''\r\n    },\r\n    validationSchema: UpdateUserSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        // Make the API call here\r\n        const response = await dispatch(patchUpdateWalletAddress(values.walletAddress));\r\n        console.log(response);\r\n        // Handle the response as needed\r\n        if (response.error) {\r\n          // Handle error\r\n          enqueueSnackbar('Error updating wallet address', { variant: 'error' });\r\n        } else {\r\n          // Handle success\r\n          const statusRes = response.status === 200 ? 'success' : 'info';\r\n          enqueueSnackbar(response.data.message, { variant: statusRes });\r\n          // You can update your Redux store or take any other action here\r\n          // redirect to withdraw\r\n          setResMsg(response.data.message);\r\n          setOpen(true);\r\n        }\r\n      } catch (error) {\r\n        // Handle API call error\r\n        console.error('Error updating wallet address:', error);\r\n        enqueueSnackbar('An error occurred while updating wallet address', { variant: 'error' });\r\n      }\r\n    }\r\n  });\r\n  const { isSubmitting, handleSubmit, getFieldProps, setFieldValue } = formik;\r\n  // console.log('updateWalletAddressRes ::::::::++++>>>> ', updateWalletAddressRes);\r\n  const Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={{ xs: 2, md: 3 }}>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Wallet Address\"\r\n                    {...getFieldProps('walletAddress')}\r\n                    error={formik.touched.walletAddress && formik.errors.walletAddress ? true : false}\r\n                    helperText={\r\n                      formik.touched.walletAddress && formik.errors.walletAddress ? formik.errors.walletAddress : null\r\n                    }\r\n                  />\r\n                </Stack>\r\n              </Stack>\r\n\r\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                  Add Wallet Address\r\n                </LoadingButton>\r\n              </Box>\r\n              <Box>\r\n                <Box>\r\n                  <h1>Important </h1>\r\n                  <ol style={{ marginLeft: '16px' }}>\r\n                    <li>Your wallet should be Metamask register</li>\r\n                    <li>Wallet address should be at least 30 characters long.</li>\r\n                    <li>Sending any other wallet address may result in the loss</li>{' '}\r\n                    <li>\r\n                      Please check your wallet carefully before add , once you add then you can't change your wallet //\r\n                      address{' '}\r\n                    </li>\r\n                    <li>Withdraw will automatically be processed after 3 network confirmations.</li>\r\n                  </ol>\r\n                </Box>\r\n              </Box>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">Your wallet address status : </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">{resMsg}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Go to dashboard\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </FormikProvider>\r\n  );\r\n}\r\n"],"sourceRoot":""}