{"version":3,"sources":["pages/dashboard/MintingList.js"],"names":["TABLE_HEAD","id","label","alignRight","descendingComparator","a","b","orderBy","UserList","themeStretch","useSettings","dispatch","useDispatch","minting","useSelector","state","user","useState","page","setPage","order","setOrder","selected","setSelected","setOrderBy","filterName","setFilterName","rowsPerPage","setRowsPerPage","useEffect","getMintingBonus","emptyRows","Math","max","length","filteredUsers","array","comparator","query","stabilizedThis","map","el","index","sort","filter","_user","calculateDate","toLowerCase","indexOf","applySortFilter","getComparator","isUserNotFound","title","maxWidth","heading","links","name","href","PATH_DASHBOARD","root","numSelected","onFilterName","event","target","value","sx","minWidth","headLabel","rowCount","onRequestSort","property","onSelectAllClick","checked","newSelecteds","n","slice","row","cnt","investmentAmt","incomeAmt","isItemSelected","hover","tabIndex","align","component","scope","padding","direction","alignItems","spacing","variant","noWrap","Date","toLocaleDateString","style","height","colSpan","py","searchQuery","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt"],"mappings":"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","file":"static/js/159.d91c1d0a.chunk.js","sourcesContent":["import { filter } from 'lodash';\r\nimport { useState, useEffect } from 'react';\r\n// material\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination\r\n} from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getMintingBonus } from '../../redux/slices/user';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport SearchNotFound from '../../components/SearchNotFound';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { UserListHead, UserListToolbar } from '../../components/_dashboard/user/list';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'memberName', label: 'Date', alignRight: false },\r\n  { id: 'curentRank', label: 'Minting Bonus', alignRight: false },\r\n  { id: 'teamBusiness', label: 'Minting', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.calculateDate.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserList() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { minting } = useSelector((state) => state.user);\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [selected, setSelected] = useState([]);\r\n  const [orderBy, setOrderBy] = useState('name');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMintingBonus());\r\n  }, [dispatch]);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = minting.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - minting.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(minting, getComparator(order, orderBy), filterName);\r\n\r\n  const isUserNotFound = filteredUsers.length === 0;\r\n\r\n  return (\r\n    <Page title=\"User: List | Digibot\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"User List\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.root },\r\n            { name: 'List' }\r\n          ]}\r\n        />\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={minting.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                    // const { id, name, role, status, company, isVerified } = row;\r\n                    const { cnt, calculateDate, investmentAmt, incomeAmt } = row;\r\n                    const isItemSelected = selected.indexOf(calculateDate) !== -1;\r\n                    return (\r\n                      <TableRow hover key={cnt} tabIndex={-1} selected={isItemSelected} aria-checked={isItemSelected}>\r\n                        <TableCell align=\"center\">{cnt}</TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                            {/* <Avatar alt={memberName} src=\"avatarUrl\" /> */}\r\n                            <Typography variant=\"subtitle2\" noWrap>\r\n                              {new Date(calculateDate).toLocaleDateString('en-GB')}\r\n                            </Typography>\r\n                          </Stack>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{incomeAmt}</TableCell>\r\n                        <TableCell align=\"left\">{`${investmentAmt}(${incomeAmt}%)`}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                {isUserNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <SearchNotFound searchQuery={filterName} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={minting.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}