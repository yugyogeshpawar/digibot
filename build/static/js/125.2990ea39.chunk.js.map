{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/material-ui/data-grid/DataGridBasic.js","pages/components-overview/material-ui/data-grid/DataGridCustom.js","pages/components-overview/material-ui/data-grid/index.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","columns","field","headerName","width","editable","type","align","headerAlign","description","flex","valueGetter","params","getValue","id","sortable","disableColumnMenu","renderCell","Box","component","Icon","icon","moreVerticalFill","height","rows","Array","_","index","mockData","lastName","name","firstName","age","number","DataGridBasic","checkboxSelection","disableSelectionOnClick","hide","filterable","getAvatar","color","createAvatar","getEmail","Typography","textDecoration","getRating","Rating","size","value","precision","readOnly","valueOptions","getStatus","isLight","useTheme","palette","mode","Label","textTransform","mx","RenderStatus","getAdmin","Stack","textAlign","checkmarkCircle2Fill","direction","px","LinearProgress","fPercent","selectedID","row","onClick","console","log","fullName","email","lastLogin","time","performance","percent","rating","status","sample","isAdmin","boolean","CustomPagination","useGridSlotComponentProps","state","apiRef","Pagination","count","pagination","pageCount","page","onChange","event","current","setPage","RatingInputValue","item","applyValue","p","placeholder","Number","newValue","DataGridCustom","length","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericColumnOperators","operator","InputComponent","filterOperators","pageSize","components","Toolbar","GridToolbar","RootStyle","styled","Page","theme","paddingTop","spacing","paddingBottom","DataGridComponent","title","pt","pb","bgcolor","Container","maxWidth","PATH_PAGE","Card","CardHeader"],"mappings":"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","file":"static/js/125.2990ea39.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\n// material\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Box } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../../../utils/mock-data';\r\n// components\r\nimport { MIconButton } from '../../../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst columns = [\r\n  {\r\n    field: 'id',\r\n    headerName: 'ID',\r\n    width: 120\r\n  },\r\n  {\r\n    field: 'firstName',\r\n    headerName: 'First name',\r\n    width: 160,\r\n    editable: true\r\n  },\r\n  {\r\n    field: 'lastName',\r\n    headerName: 'Last name',\r\n    width: 160,\r\n    editable: true\r\n  },\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 120,\r\n    editable: true,\r\n    align: 'center',\r\n    headerAlign: 'center'\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    flex: 1,\r\n    valueGetter: (params) =>\r\n      `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\r\n  },\r\n  {\r\n    field: 'action',\r\n    headerName: ' ',\r\n    width: 80,\r\n    align: 'right',\r\n    sortable: false,\r\n    disableColumnMenu: true,\r\n    renderCell: () => (\r\n      <MIconButton>\r\n        <Box component={Icon} icon={moreVerticalFill} sx={{ width: 20, height: 20 }} />\r\n      </MIconButton>\r\n    )\r\n  }\r\n];\r\n\r\nconst rows = [...Array(30)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  lastName: mockData.name.lastName(index),\r\n  firstName: mockData.name.firstName(index),\r\n  age: mockData.number.age(index)\r\n}));\r\n\r\nexport default function DataGridBasic() {\r\n  return <DataGrid columns={columns} rows={rows} checkboxSelection disableSelectionOnClick />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { sample } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport checkmarkCircle2Fill from '@iconify/icons-eva/checkmark-circle-2-fill';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Stack, Typography, Box, Rating, Pagination, LinearProgress } from '@material-ui/core';\r\nimport {\r\n  DataGrid,\r\n  GridToolbar,\r\n  useGridSlotComponentProps,\r\n  getGridNumericColumnOperators\r\n} from '@material-ui/data-grid';\r\n// utils\r\nimport createAvatar from '../../../../utils/createAvatar';\r\nimport { fPercent } from '../../../../utils/formatNumber';\r\nimport mockData from '../../../../utils/mock-data';\r\n// components\r\nimport Label from '../../../../components/Label';\r\nimport { MIconButton, MAvatar } from '../../../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction RenderStatus(getStatus) {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  return (\r\n    <Label\r\n      variant={isLight ? 'ghost' : 'filled'}\r\n      color={(getStatus === 'busy' && 'error') || (getStatus === 'away' && 'warning') || 'success'}\r\n      sx={{ textTransform: 'capitalize', mx: 'auto' }}\r\n    >\r\n      {getStatus}\r\n    </Label>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  // OPTIONS\r\n  // https://material-ui.com/api/data-grid/grid-col-def/#main-content\r\n  // - hide: false (default)\r\n  // - editable: false (default)\r\n  // - filterable: true (default)\r\n  // - sortable: true (default)\r\n  // - disableColumnMenu: false (default)\r\n\r\n  // FIELD TYPES\r\n  // --------------------\r\n  // 'string' (default)\r\n  // 'number'\r\n  // 'date'\r\n  // 'dateTime'\r\n  // 'boolean'\r\n  // 'singleSelect'\r\n\r\n  {\r\n    field: 'id',\r\n    hide: true\r\n  },\r\n  {\r\n    field: 'avatar',\r\n    headerName: 'Avatar',\r\n    width: 64,\r\n    sortable: false,\r\n    filterable: false,\r\n    disableColumnMenu: true,\r\n    align: 'center',\r\n    renderCell: (params) => {\r\n      const getAvatar = params.getValue(params.id, 'name');\r\n      return (\r\n        <MAvatar color={createAvatar(getAvatar).color} sx={{ width: 36, height: 36 }}>\r\n          {createAvatar(getAvatar).name}\r\n        </MAvatar>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    field: 'name',\r\n    headerName: 'Name',\r\n    flex: 1\r\n  },\r\n  {\r\n    field: 'email',\r\n    headerName: 'Email',\r\n    flex: 1,\r\n    renderCell: (params) => {\r\n      const getEmail = params.getValue(params.id, 'email');\r\n      return (\r\n        <Typography variant=\"body2\" sx={{ textDecoration: 'underline' }} noWrap>\r\n          {getEmail}\r\n        </Typography>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    field: 'lastLogin',\r\n    type: 'dateTime',\r\n    headerName: 'Last login',\r\n    width: 200,\r\n    align: 'right',\r\n    headerAlign: 'right'\r\n  },\r\n  {\r\n    field: 'rating',\r\n    type: 'number',\r\n    headerName: 'Rating',\r\n    width: 160,\r\n    disableColumnMenu: true,\r\n    renderCell: (params) => {\r\n      const getRating = params.getValue(params.id, 'rating');\r\n      return <Rating size=\"small\" value={getRating} precision={0.5} readOnly />;\r\n    }\r\n  },\r\n  {\r\n    field: 'status',\r\n    type: 'singleSelect',\r\n    headerName: 'Status',\r\n    width: 120,\r\n    valueOptions: ['online', 'away', 'busy'],\r\n    renderCell: (params) => {\r\n      const getStatus = params.getValue(params.id, 'status');\r\n      return RenderStatus(getStatus);\r\n    }\r\n  },\r\n  {\r\n    field: 'isAdmin',\r\n    type: 'boolean',\r\n    width: 120,\r\n    renderCell: (params) => {\r\n      const getAdmin = params.getValue(params.id, 'isAdmin');\r\n      return (\r\n        <Stack alignItems=\"center\" sx={{ width: 1, textAlign: 'center' }}>\r\n          {getAdmin ? (\r\n            <Box component={Icon} icon={checkmarkCircle2Fill} sx={{ width: 20, height: 20, color: 'primary.main' }} />\r\n          ) : (\r\n            '-'\r\n          )}\r\n        </Stack>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    field: 'performance',\r\n    type: 'number',\r\n    headerName: 'Performance',\r\n    width: 160,\r\n    renderCell: (params) => {\r\n      const value = params.getValue(params.id, 'performance');\r\n      return (\r\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ px: 2, width: 1, height: 1 }}>\r\n          <LinearProgress\r\n            value={value}\r\n            variant=\"determinate\"\r\n            color={(value < 30 && 'error') || (value > 30 && value < 70 && 'warning') || 'primary'}\r\n            sx={{ width: 1, height: 6 }}\r\n          />\r\n          <Typography variant=\"caption\" sx={{ width: 90 }}>\r\n            {fPercent(value)}\r\n          </Typography>\r\n        </Stack>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    field: 'action',\r\n    headerName: ' ',\r\n    width: 80,\r\n    align: 'right',\r\n    sortable: false,\r\n    filterable: false,\r\n    disableColumnMenu: true,\r\n    renderCell: (params) => {\r\n      const selectedID = params.row.id;\r\n\r\n      const handleClick = () => {\r\n        console.log('selectedID', selectedID);\r\n      };\r\n\r\n      return (\r\n        <MIconButton onClick={handleClick}>\r\n          <Box component={Icon} icon={moreVerticalFill} sx={{ width: 20, height: 20 }} />\r\n        </MIconButton>\r\n      );\r\n    }\r\n  }\r\n];\r\n\r\nconst rows = [...Array(36)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  name: mockData.name.fullName(index),\r\n  email: mockData.email(index),\r\n  lastLogin: mockData.time(index),\r\n  performance: mockData.number.percent(index),\r\n  rating: mockData.number.rating(index),\r\n  status: sample(['online', 'away', 'busy']),\r\n  isAdmin: mockData.boolean(index)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction CustomPagination() {\r\n  const { state, apiRef } = useGridSlotComponentProps();\r\n\r\n  return (\r\n    <Pagination\r\n      color=\"primary\"\r\n      count={state.pagination.pageCount}\r\n      page={state.pagination.page + 1}\r\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\r\n    />\r\n  );\r\n}\r\n\r\nRatingInputValue.propTypes = {\r\n  applyValue: PropTypes.func.isRequired,\r\n  item: PropTypes.shape({\r\n    columnField: PropTypes.string,\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    operatorValue: PropTypes.string,\r\n    value: PropTypes.any\r\n  }).isRequired\r\n};\r\n\r\nfunction RatingInputValue({ item, applyValue }) {\r\n  return (\r\n    <Box sx={{ p: 1, height: 1, alignItems: 'flex-end', display: 'flex' }}>\r\n      <Rating\r\n        size=\"small\"\r\n        precision={0.5}\r\n        placeholder=\"Filter value\"\r\n        value={Number(item.value)}\r\n        onChange={(event, newValue) => {\r\n          applyValue({ ...item, value: newValue });\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function DataGridCustom() {\r\n  if (columns.length > 0) {\r\n    const ratingColumn = columns.find((column) => column.field === 'rating');\r\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\r\n\r\n    const ratingFilterOperators = getGridNumericColumnOperators().map((operator) => ({\r\n      ...operator,\r\n      InputComponent: RatingInputValue\r\n    }));\r\n\r\n    columns[ratingColIndex] = {\r\n      ...ratingColumn,\r\n      filterOperators: ratingFilterOperators\r\n    };\r\n  }\r\n\r\n  return (\r\n    <DataGrid\r\n      checkboxSelection\r\n      disableSelectionOnClick\r\n      rows={rows}\r\n      columns={columns}\r\n      pagination\r\n      pageSize={10}\r\n      components={{\r\n        Toolbar: GridToolbar,\r\n        Pagination: CustomPagination\r\n      }}\r\n    />\r\n  );\r\n}\r\n","// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, Container, Stack, Card, CardHeader } from '@material-ui/core';\r\n// routes\r\nimport { PATH_PAGE } from '../../../../routes/paths';\r\n// components\r\nimport Page from '../../../../components/Page';\r\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\r\n//\r\nimport DataGridBasic from './DataGridBasic';\r\nimport DataGridCustom from './DataGridCustom';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  paddingTop: theme.spacing(11),\r\n  paddingBottom: theme.spacing(15)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DataGridComponent() {\r\n  return (\r\n    <RootStyle title=\"Components: DataGrid | Digibot\">\r\n      <Box\r\n        sx={{\r\n          pt: 6,\r\n          pb: 1,\r\n          mb: 10,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <HeaderBreadcrumbs\r\n            heading=\"DataGrid\"\r\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'DataGrid' }]}\r\n            moreLink=\"https://material-ui.com/components/data-grid\"\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Stack spacing={5}>\r\n          <Card>\r\n            <CardHeader title=\"Basic\" sx={{ mb: 2 }} />\r\n            <Box sx={{ height: 390 }}>\r\n              <DataGridBasic />\r\n            </Box>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Custom\" sx={{ mb: 2 }} />\r\n            <Box sx={{ height: 720 }}>\r\n              <DataGridCustom />\r\n            </Box>\r\n          </Card>\r\n        </Stack>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}