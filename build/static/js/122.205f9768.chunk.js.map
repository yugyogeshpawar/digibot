{"version":3,"sources":["../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/core/CardContent/cardContentClasses.js","../node_modules/@material-ui/core/CardContent/CardContent.js","pages/dashboard/OpenTicket.js"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","_extends","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","variant","children","color","_jsxs","clsx","as","getCardContentUtilityClass","CardContentRoot","paddingBottom","CardContent","OpenTicket","useState","userReply","setUserReply","category","issue","timestamp","replies","message","userType","ticket","setTicket","container","spacing","p","item","xs","sx","mb","md","pb","style","position","top","right","fontSize","map","reply","justifyContent","mt","pl","sm","px","py","dangerouslySetInnerHTML","__html","mdOffset","fullWidth","label","multiline","rows","value","onChange","event","target","size","onClick","console","log","prevTicket","Date","toISOString"],"mappings":"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","file":"static/js/122.205f9768.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","/* eslint-disable react/jsx-key */\r\nimport { useState } from 'react';\r\nimport { Button, Typography, TextField, Grid, Card, CardContent, CardHeader, Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OpenTicket() {\r\n  const [userReply, setUserReply] = useState('');\r\n\r\n  const handleReplyChange = (event) => {\r\n    setUserReply(event.target.value);\r\n  };\r\n\r\n  const handleReplySubmit = () => {\r\n    // Add the user's reply to the ticket's replies and clear the reply field\r\n    console.log(userReply);\r\n    setTicket((prevTicket) => ({\r\n      ...prevTicket,\r\n      replies: [\r\n        ...prevTicket.replies,\r\n        {\r\n          message: userReply,\r\n          timestamp: new Date().toISOString(), // Use the current date and time as the timestamp\r\n          userType: 'user'\r\n        }\r\n      ]\r\n    }));\r\n    setUserReply('');\r\n  };\r\n\r\n  // Dummy data for the ticket and replies\r\n  const [ticket, setTicket] = useState({\r\n    category: 'Technical',\r\n    issue: 'I am having trouble logging in.',\r\n    timestamp: '2023-08-07 12:34:56',\r\n    replies: [\r\n      {\r\n        message: 'Yes, I have tried resetting my password, but I am still unable to log in.',\r\n        timestamp: '2023-08-07 13:00',\r\n        userType: 'user'\r\n      },\r\n      {\r\n        message:\r\n          'Have you tried resetting your password? <a href=\"https://www.example.com/reset-password\">Reset Password</a>',\r\n        timestamp: '2023-08-07 13:45',\r\n        userType: 'support'\r\n      },\r\n      {\r\n        message: \"I tried resetting my password again, but it still didn't work.\",\r\n        timestamp: '2023-08-07 14:00',\r\n        userType: 'user'\r\n      },\r\n      {\r\n        message:\r\n          'If you\\'re still having trouble, you can contact our support team directly at <a href=\"mailto:support@example.com\">support@example.com</a>.',\r\n        timestamp: '2023-08-07 14:56',\r\n        userType: 'support'\r\n      }\r\n    ]\r\n  });\r\n\r\n  if (!ticket) {\r\n    return <Typography variant=\"h4\">You haven't raised any tickets yet.</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2} p={1}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h3\">Your Ticket</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sx={{ mb: 1 }} md={8}>\r\n        <Card sx={{ pb: 2 }}>\r\n          <CardHeader\r\n            title={\r\n              <Typography variant=\"h6\" component=\"div\">\r\n                {ticket.issue}\r\n              </Typography>\r\n            }\r\n            subheader={\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Category: {ticket.category}\r\n              </Typography>\r\n            }\r\n          />\r\n          <Typography variant=\"body2\" style={{ position: 'absolute', top: 10, right: 10, fontSize: '0.8rem' }}>\r\n            {ticket.timestamp}\r\n          </Typography>\r\n        </Card>\r\n      </Grid>\r\n\r\n      {ticket.replies.map((reply) => (\r\n        <Grid\r\n          container\r\n          justifyContent={reply.userType === 'user' ? 'flex-end' : 'flex-start'}\r\n          sx={{ mt: 1 }}\r\n          xs={12}\r\n          md={8}\r\n          pl={2}\r\n        >\r\n          <Grid item xs={6}>\r\n            <Card>\r\n              <CardHeader\r\n                sx={{ pl: { xs: '10px', sm: '14px' } }}\r\n                title={reply.userType === 'user' ? 'User' : 'Support Team'}\r\n              />\r\n              <CardContent sx={{ px: { xs: '10px', sm: '14px' }, py: { xs: '6px', sm: '14px' } }}>\r\n                <Typography variant=\"caption2\" dangerouslySetInnerHTML={{ __html: reply.message }} />\r\n                <Typography variant=\"body2\" style={{ position: 'absolute', top: 10, right: 10, fontSize: '0.8rem' }}>\r\n                  {reply.timestamp}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n\r\n      <Grid item xs={12} md={6} mdOffset={6} sx={{ px: { xs: 1, sm: 2 } }}>\r\n        <TextField fullWidth label=\"Your Reply\" multiline rows={4} value={userReply} onChange={handleReplyChange} />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} mdOffset={6} sx={{ px: { xs: 1, sm: 2 } }}>\r\n        <Button size=\"large\" variant=\"contained\" onClick={handleReplySubmit}>\r\n          Submit Reply\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"],"sourceRoot":""}