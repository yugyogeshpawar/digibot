{"version":3,"sources":["components/HeaderBreadcrumbs.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","../node_modules/@material-ui/core/CardContent/cardContentClasses.js","../node_modules/@material-ui/core/CardContent/CardContent.js","pages/dashboard/Activation.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","_extends","title","subheader","root","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","CardHeader","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutPropertiesLoose","styleProps","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","children","color","_jsxs","clsx","as","getCardContentUtilityClass","CardContentRoot","paddingBottom","CardContent","RootStyle","Page","theme","paddingTop","spacing","baseUrl","process","PORT","Upload","NewUserSchema","Yup","shape","aadharFront","required","aadharBack","avatarUrl","enqueueSnackbar","useSnackbar","useState","setAadharFront","setAadharBack","setAvatarUrl","handleDropAvatar","useCallback","acceptedFiles","file","preview","URL","createObjectURL","handleDropSingleAadharFront","handleDropSingleAadharBack","uploadKyc","formData","a","console","log","accessToken","window","localStorage","getItem","axios","post","headers","Authorization","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","values","setSubmitting","resetForm","setErrors","FormData","append","error","handleSubmit","errors","touched","isSubmitting","setFieldValue","getFieldProps","style","maxWidth","PATH_DASHBOARD","value","noValidate","autoComplete","accept","onDrop","caption","mx","textAlign","fData","container","item","xs","md","pr","pl","justifyContent","loading"],"mappings":"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","file":"static/js/106.4e257fd0.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      styleProps: styleProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import * as Yup from 'yup';\r\nimport { useState, useCallback } from 'react';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport { Box, Typography, Card, Stack, Container, CardHeader, CardContent, Grid } from '@material-ui/core';\r\n// routes\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// utils\r\n\r\nimport { fData } from '../../utils/formatNumber';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { UploadAvatar, UploadSingleFile } from '../../components/upload';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  paddingTop: theme.spacing(11),\r\n  paddingBottom: theme.spacing(15)\r\n}));\r\n\r\nconst baseUrl = process.env.PORT || 'https://digibot.co/api/v1/api';\r\n\r\nexport default function Upload() {\r\n  const NewUserSchema = Yup.object().shape({\r\n    aadharFront: Yup.mixed().required('Aadhar Card (Front Side) is required'),\r\n    aadharBack: Yup.mixed().required('Aadhar Card (Back Side) is required'),\r\n    avatarUrl: Yup.mixed().required('Avatar is required')\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [aadharFront, setAadharFront] = useState(null);\r\n  const [aadharBack, setAadharBack] = useState(null);\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n  const handleDropAvatar = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    if (file) {\r\n      setAvatarUrl({\r\n        ...file,\r\n        preview: URL.createObjectURL(file)\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleDropSingleAadharFront = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    if (file) {\r\n      setAadharFront({\r\n        ...file,\r\n        preview: URL.createObjectURL(file)\r\n      });\r\n    }\r\n  }, []);\r\n  const handleDropSingleAadharBack = useCallback((acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    if (file) {\r\n      setAadharBack({\r\n        ...file,\r\n        preview: URL.createObjectURL(file)\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const uploadKyc = async (formData) => {\r\n    try {\r\n      console.log(formData);\r\n      const accessToken = window.localStorage.getItem('accessToken');\r\n      const response = await axios.post(`${baseUrl}Account/AddKyc`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      });\r\n      enqueueSnackbar('File Uploaded Successfully', { variant: 'success' });\r\n    } catch (error) {\r\n      console.log(error);\r\n      enqueueSnackbar('Already Uploaded or Something wrong', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      aadharFront,\r\n      aadharBack,\r\n      avatarUrl\r\n    },\r\n    validationSchema: NewUserSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        // await fakeRequest(500);\r\n        // resetForm();\r\n        console.log(values);\r\n        const formData = new FormData();\r\n        formData.append('file', values.avatarUrl.file);\r\n        formData.append('file', values.aadharFront.file);\r\n        formData.append('file', values.aadharBack.file);\r\n        setSubmitting(false);\r\n        uploadKyc(formData);\r\n        // enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\r\n        // navigate(PATH_DASHBOARD.user.list);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <RootStyle style={{ paddingTop: '0', paddingBottom: '0' }} title=\"Dashboard: Activation | Digibot\">\r\n      <Box\r\n        sx={{\r\n          mb: 1\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <HeaderBreadcrumbs\r\n            heading=\"KYC\"\r\n            links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Activation' }]}\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <FormikProvider value={formik}>\r\n          <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <Stack spacing={5}>\r\n              <Card>\r\n                <CardHeader title=\"Upload Photo\" />\r\n                <CardContent>\r\n                  <UploadAvatar\r\n                    accept=\"image/*\"\r\n                    file={avatarUrl}\r\n                    onDrop={handleDropAvatar}\r\n                    caption={\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        sx={{\r\n                          mt: 2,\r\n                          mx: 'auto',\r\n                          display: 'block',\r\n                          textAlign: 'center',\r\n                          color: 'text.secondary'\r\n                        }}\r\n                      >\r\n                        Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                        <br /> max size of {fData(3145728)}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n              <Grid container>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  sx={{\r\n                    pr: 1\r\n                  }}\r\n                >\r\n                  <Card>\r\n                    <CardHeader title=\"Upload Aadhar Card (Front Side)\" />\r\n                    <CardContent>\r\n                      <UploadSingleFile file={aadharFront} onDrop={handleDropSingleAadharFront} />\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={6}\r\n                  sx={{\r\n                    pl: 1\r\n                  }}\r\n                >\r\n                  <Card>\r\n                    <CardHeader title=\"Upload Aadhar Card (Back Side)\" />\r\n                    <CardContent>\r\n                      <UploadSingleFile file={aadharBack} onDrop={handleDropSingleAadharBack} />\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n              <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center' }}>\r\n                <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                  Submit\r\n                </LoadingButton>\r\n              </Box>\r\n            </Stack>\r\n          </Form>\r\n        </FormikProvider>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}